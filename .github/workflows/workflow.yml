name: Build and Deploy

on: [push, pull_request, workflow_dispatch]

jobs:
    build:
        runs-on: ubuntu-24.04-arm
        steps:
            - uses: actions/checkout@v4

            - uses: ilyvion-contrib/container-ci-build@main
              with:
                image: questionablextensions

            - name: Upload artifact
              if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
              uses: actions/upload-artifact@v4
              with:
                  name: questionablextensions-tar
                  path: questionablextensions.tar

    deploy:
        runs-on: ubuntu-latest
        needs: build
        outputs:
            deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        steps:
            - name: Create Deployment
              id: create_deployment
              run: |
                deployment_response=$(curl -fsS -X POST \
                    -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github+json" \
                        https://api.github.com/repos/${{ github.repository }}/deployments \
                    -d '{
                        "ref": "${{ github.sha }}",
                        "environment": "staging",
                        "auto_merge": false,
                        "required_contexts": [],
                        "description": "Deploying to staging"
                    }')
                deployment_id=$(echo "$deployment_response" | jq -r '.id')
                echo "deployment_id=$deployment_id" >> "$GITHUB_OUTPUT"

                curl -fsS -X POST \
                    -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github+json" \
                        https://api.github.com/repos/${{ github.repository }}/deployments/${deployment_id}/statuses \
                    -d '{"state": "in_progress"}'

            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: questionablextensions-tar

            - uses: ilyvion-contrib/container-ci-deploy@main
              with:
                ssh_known_hosts: ${{ secrets.deploy_known_hosts }}
                ssh_private_key: ${{ secrets.deploy_key }}
                ssh_user: ${{ secrets.deploy_user }}
                ssh_host: ${{ secrets.deploy_target }}
                ssh_port: ${{ secrets.deploy_port }}
                image: questionablextensions
            
            - name: Update Deployment Status
              run: |
                curl -X POST \
                    -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github+json" \
                        https://api.github.com/repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.deployment_id }}/statuses \
                    -d '{
                        "state": "success",
                        "description": "Deployment succeeded"
                    }'
              
    report-failure:
        runs-on: ubuntu-latest
        needs: deploy
        if: failure()
        steps:
            - name: Report failure to GitHub Deployment
              run: |
                curl -sSL -X POST \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github+json" \
                    https://api.github.com/repos/${{ github.repository }}/deployments/${{ needs.deploy.outputs.deployment_id }}/statuses \
                -d '{
                    "state": "failure",
                    "description": "Deployment failed"
                }'
